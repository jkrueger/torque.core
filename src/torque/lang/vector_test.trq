(ns torque.lang.vector-test
  (:require [torque.test :refer [deftest is]]))

(deftest equality
  (is (= [] []))
  (is (= [] (vector)))
  ;(is (= [] ()))
  ;(is (= [] (list)))
  (is (= [1] [1]))
  (is (= [1 2] (conj [1] 2)))
  (is (= (vector) []))
  ;(is (= (vector) (list)))
  (is (= (vector 1 2) [1 2]))
  (is (= (vector 1 2) (vector 1 2))))

(deftest peek-test
  (is (= (peek (vector 1)) 1))
  (is (= (peek (vector 1 2 3)) 3))
  (is (= (peek (vec (range 33))) 32))
  (is (= (peek (vec (range 100))) 99)))

(deftest pop-test
  (is (= (pop (vector 1)) []))
  (is (= (pop (vector 1 2 3)) [1 2]))
  (is (= (pop (vec (range 33))) (vec (range 32))))
  (is (= (pop (vec (range 100))) (vec (range 99)))))
