;; -*- mode: clojure; -*-

(ns torque.lang.resource
  (:require
    [torque.lang.protocols :refer :all]
    [torque.lang.exceptions :refer :all]
    [torque.lang.algo :refer :all]))

(defmacro with-resource [binding & body]
  (let [sym (nth binding 0)]
    `(try
       (let [~sym ~(nth binding 1)
             out  (do ~@body)]
         (-dispose ~sym)
         out)
       (catch e
         (-dispose ~sym)
         (throw e)))))
