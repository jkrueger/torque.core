;; -*- mode: clojure;-*-
;;   Copyright (c) Rich Hickey. All rights reserved.
;;   The use and distribution terms for this software are covered by the
;;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)
;;   which can be found in the file epl-v10.html at the root of this distribution.
;;   By using this software in any fashion, you are agreeing to be bound by
;;   the terms of this license.
;;   You must not remove this notice, or any other, from this software.

(ns torque.lang.seq
  (:use
    [torque.lang.protocols]
    [torque.lang.boot]))

(defn first [s]
  (when-not (nil? s)
    (if (satisfies? ISeq s)
      (-first s)
      (when-let [s (seq s)]
        (-first s)))))

(defn rest [s]
  (when-not (nil? s)
    (if (satisfies? ISeq s)
      (-rest s)
      (if-let [s (seq s)]
        (-rest s)
        ())
      ())))

(defn next [s]
  (when-not (nil? s)
    (if (satisfies? INext s)
      (-next s)
      (seq (rest s)))))

(defn second [s]
  (first (next s)))

(defn ffirst [s]
  (first (first s)))

(defn nnext [s]
  (next (next s)))
