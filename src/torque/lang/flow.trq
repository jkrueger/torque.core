;; -*- mode: clojure;-*-
;;   Copyright (c) Rich Hickey. All rights reserved.
;;   The use and distribution terms for this software are covered by the
;;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)
;;   which can be found in the file epl-v10.html at the root of this distribution.
;;   By using this software in any fashion, you are agreeing to be bound by
;;   the terms of this license.
;;   You must not remove this notice, or any other, from this software.

(ns torque.lang.flow
  (:use
    [torque.lang.protocols]
    [torque.lang.boot]
    [torque.lang.list]
    [torque.lang.cons]))

(def ^:macro when
  (fn* [test & body]
    (list 'if test (cons 'do body) nil)))

(def ^:macro when-not
  (fn* [test & body]
    (list 'if test nil (cons 'do body))))

(def ^:macro if-not
  (fn* [test then else]
    (list 'if test else then)))

(def ^:macro cond
  (fn* [& clauses]
    (when clauses
      (list 'if (-first clauses)
            (if (-next clauses)
              (-first (-next clauses))
              nil)
            (cons 'torque.lang.flow/cond
                  (-next (-next clauses)))))))

;;(throw (ex-info "cond requires an even number of forms" {}))
