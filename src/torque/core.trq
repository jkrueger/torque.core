;; -*- mode: clojure;-*-

(ns torque.core
  (:inherit
    [torque.lang.protocols]
    [torque.lang.boot]
    [torque.lang.limits]
    [torque.lang.string]
    [torque.lang.cons]
    [torque.lang.list]
    [torque.lang.exceptions]
    [torque.lang.flow]
    [torque.lang.let]
    [torque.lang.def]
    [torque.lang.lazy]
    [torque.lang.seq]
    [torque.lang.indexed]
    [torque.lang.chunked]
    [torque.lang.vector]
    [torque.lang.map]
    [torque.lang.squote]
    [torque.lang.predicates]
    [torque.lang.algo]
    [torque.lang.symbol]
    [torque.lang.keyword]
    [torque.lang.arrows]
    [torque.lang.set]
    [torque.lang.range]
    [torque.lang.atom]
    [torque.lang.hierarchy]
    [torque.lang.multimethod]
    [torque.lang.binary]
    [torque.lang.resource]
    [torque.lang.debug]
    [torque.lang.destructure]))

(defn println [& args]
  (print (apply str (interpose " " args))))
